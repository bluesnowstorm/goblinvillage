(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> list index out of range"
p3
sS'layer'
p4
S'/home/a/Desktop/web2py/applications/goblinvillage/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\nimport traceback\nimport requests\nimport random\n\n\ndef get_user_name_from_email(email):\n    """Returns a string corresponding to the user first and last names,\n    given the user email."""\n    u = db(db.auth_user.email == email).select().first()\n    if u is None:\n        return \'None\'\n    else:\n        return u.first_name\n\n@auth.requires_login()\ndef get_village():\n    row = db(db.villages.user_email == auth.user.email).select().first()\n    if row==None:\n        return response.json(dict(village="None"))\n    return response.json(dict(village=row.village))\n\ndef get_other_villages():\n    rows = db(db.villages).select()\n    print rows\n    unlucky_village = rows[random.randint(0,len(rows))]\n    return dict(unlucky_village=unlucky_village.village)\n\n@auth.requires_login()\ndef update_village():\n    print request.vars.village\n    row = db(db.villages.user_email == auth.user.email).select().first()\n    if row == None:\n        db.villages.insert(user_email=auth.user.email,village=request.vars.village)\n    else:\n        row.update_record(village = request.vars.village)\n    #db.villages.insert(\n    #    village=request.vars.village\n    #)\n\n@auth.requires_login()\ndef index():\n    return dict()\n\n\ndef user():\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\n\ndef call():\n    return service()\n\n\n\nresponse._vars=response._caller(get_other_villages)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/a/Desktop/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/a/Desktop/web2py/applications/goblinvillage/controllers/default.py", line 62, in <module>\n  File "/home/a/Desktop/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/a/Desktop/web2py/applications/goblinvillage/controllers/default.py", line 28, in get_other_villages\n    unlucky_village = rows[random.randint(0,len(rows))]\n  File "/home/a/Desktop/web2py/gluon/packages/dal/pydal/objects.py", line 2544, in __getitem__\n    row = self.records[i]\nIndexError: list index out of range\n'
p11
s.